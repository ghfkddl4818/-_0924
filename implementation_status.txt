[구현된 항목]
1. GUI 자동화 시작 시 web_automation.startup_delay(기본 5초)만큼 대기해 사용자가 브라우저 포커스를 잡을 시간을 확보합니다.
2. web_automation.scrolling.initial_scroll / amount / wait_between 등을 이용해 상세 버튼 탐색 전에 선스크롤을 수행하고, primary → alternative 이미지로 버튼을 찾습니다.
3. 상세 버튼이 화면에 없으면 web_automation.scrolling.max_scrolls 범위에서 추가 스크롤을 반복해 다시 시도합니다.
4. FireShot 단축키(ctrl+shift+s) 실행 후 저장 버튼을 찾고, progress_template / completion_template / save_button 존재 여부로 캡처 진행 여부를 감시합니다.
5. 분석 단계에서 analysis_start → excel_download 버튼을 지정된 retry / timeout 값으로 누르고, 다운로드 폴더에서 새 파일이 완성될 때까지 주기적으로 감시합니다.
6. 처리 완료 후 close_after_process / navigation 설정에 따라 탭을 닫거나(ctrl+w) 다음 탭으로 이동(ctrl+tab)합니다.
7. Vertex AI(gemini-2.5-pro) 호출, 파이프라인 CLI & GUI 지원, FireShot/스크롤 설정 확장 등 전체 설정과 테스트(pytest 64개) 최신 상태를 유지합니다.

[미구현 항목]
1. FireShot이 새 탭을 열고 닫는 과정에서 탭 활성 상태를 감지하거나, 저장 탭을 강제 종료하고 원래 탭으로 돌아가는 로직.
2. FireShot 이후 ctrl+shift+a로 정렬 팝업을 열고 review_button → crawling_tool 등을 순차적으로 실행하는 전체 후속 작업.
3. crawling_tool 실행 뒤 review_button이 사라졌는지 확인하고, 남아 있을 경우 재시도/예외 처리를 하는 로직.
4. 다운로드된 스크린샷·엑셀 파일을 DataProcessor로 제품별 폴더/DB에 정리하고 로그를 남기는 작업.
5. 정리된 데이터를 기반으로 콜드메일 생성에 필요한 입력 구조를 구성하는 작업.
6. 현재 탭이 맞는지, 팝업이 떠 있는지 등을 감지하고 복구하는 안정화 루틴.
7. FireShot config에 있는 auto_close_tab, product_tab_template 등 추가 필드를 실제 로직과 연결하는 작업.
